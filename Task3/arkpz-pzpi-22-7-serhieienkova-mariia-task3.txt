МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
Кафедра програмної інженерії
ЗВІТ
З лабораторної роботи №3
З дисципліни «Аналіз та рефакторинг коду»
на тему: «РОЗРОБКА БІЗНЕС-ЛОГІКИ ТА
ФУНКЦІЙ АДМІНІСТРУВАННЯ
СЕРВЕРНОЇ ЧАСТИНИ ПРОГРАМНОЇ
СИСТЕМИ»
Виконала:
ст. гр. ПЗПІ-22-7
Сергєєнкова Марія Сергіївна
Перевірив:
доц.каф. ПІ
Сокорчук І.П.
Харків 2024
1.1 Мета роботи
Метою роботи є розробка бізнес-логіки та функцій адміністрування для
серверної частини для «Програмна система для догляду за літніми людьми».
1.2 Розробка бізнес логіки серверної частини програмної системи
Для створення бізнес-логіки серверної частини програмної системи
«Agewell» було застосовано UML-діаграму діяльності (див. рис. 1).
Ця діаграма представляє графічне зображення процесів і взаємодій, які
описують алгоритми виконання завдань у системі. Вона відображає послідовність
дій, залежності між етапами та умови переходу між ними. Використання UMLдіаграми діяльності значно спрощує планування й реалізацію бізнес-логіки,
дозволяючи структуровано представити взаємодію користувачів із системою
відповідно до їхніх ролей і врахувати всі можливі сценарії роботи. Завдяки цьому
забезпечується точність, узгодженість і логічна завершеність функціоналу, який
реалізується на серверній стороні.
Рисунок 1 – UML -діаграма діяльності системи «Agewell»
1.3 Розробка функції адміністрування серверної частини програмної
системи
Для проєктування функцій адміністрування серверної частини було
використано UML-діаграму взаємодії (див. рис. 2), яка служить графічним
інструментом для моделювання процесів обміну даними між об'єктами системи.
Ця діаграма ілюструє, як об'єкти передають повідомлення одне одному,
показуючи послідовність викликів методів, передачу даних і отримання
результатів.
Система передбачає кілька типів користувачів, а саме родичі, лікарі,
адміністратори.
Рисунок 2 – UML -діаграма взаємодії системи «Agewell»
1.4 Розробка програмної реалізації бізнес логіки та функцій
адміністрування серверної частини
Основні функції зосереджені на забезпеченні адміністрування, перевірці
доступу користувачів, обробці даних про стан здоров’я та автоматичній генерації
повідомлень.
Можливість адміністрування серверної частини було реалізовано за
допомогою додаткових перевірок рівня доступу користувача перед виконанням
певних дій, що було визначено, як адміністраторські.
Фрагмент коду наведено у додатку А.
Функція перевірки рівня доступу checkAccessLevel перевіряє рівень
доступу користувача перед виконанням дій, таких як створення, оновлення чи
видалення даних. Якщо рівень доступу не відповідає вимогам, користувач
отримує відмову в доступі.
Перевірка доступу до власних даних або адміністрування
робиться за допомогою функції checkAdminOrSelf, що дозволяє адміністратору
змінювати дані будь-якого користувача або користувачу редагувати власні дані.
Якщо користувач не має необхідного рівня доступу або не є власником даних,
запит блокується.
Реалізація бізнес-логіки для обробки медичних даних забезпечує аналіз
зібраних показників здоров’я, автоматичне створення сповіщень у разі критичних
значень і оновлення записів у базі даних.
Серед видів математичної обробки даних можна виокремити аналіз
отриманих показників здоровʼя.
Програмна реалізація наведена в додатку Б.
Додавання нових показників здоров’я
зроблено за допомогою функції Create, що виконує додавання нових показників
до бази даних із фіксацією часу. Після цього проводиться автоматична перевірка
показників за допомогою функції checkIndicators, яка аналізує значення пульсу,
тиску та температури.
На основі результатів перевірки створюється повідомлення про критичні
або нестандартні показники. Наприклад, якщо пульс виходить за межі
допустимого діапазону, система автоматично генерує відповідне повідомлення й
зберігає його в базі даних.
Аналіз показників здоров’я робиться за допомогою функції checkIndicators,
яка перевіряє кожен показник на відповідність критеріям по пульсу, тиску та
температурі. Ця функція забезпечує автоматичний моніторинг стану здоров’я
пацієнтів і дозволяє виявляти потенційно небезпечні ситуації.
Усі описані функції реалізують бізнес-логіку для забезпечення
безперервного моніторингу здоров’я пацієнтів, керування даними користувачів
та забезпечення їхньої безпеки. Серверна частина використовує стандартизовані
запити для передачі відповідей у форматі JSON, що забезпечує ефективну
інтеграцію з клієнтськими додатками.
1.5 Висновки
Під час виконання лабораторної роботи було реалізовано кілька функцій, що
охоплюють основні аспекти адміністрування, безпеки та обробки даних про
здоров'я. Зокрема, було впроваджено рішення для перевірки рівня доступу
користувачів, управління обліковими записами та аналізу показників здоров’я, що
значно покращує функціональність і безпеку системи.
Адміністрування серверної частини включає перевірку рівня доступу
користувачів перед виконанням критичних дій. Реалізовано функції перевірки
доступу адміністратора та дозволу дій для користувачів лише в межах їхніх
повноважень, що дозволяє забезпечити належний рівень контролю доступу. Також
передбачено можливість створення, оновлення та видалення користувачів.
Обробка даних про стан здоров'я передбачає аналіз ключових показників,
таких як пульс, артеріальний тиск та температура. Реалізовано механізм
автоматичного формування повідомлень про критичні або нестандартні значення
цих показників, що дозволяє швидко реагувати на потенційні ризики для здоров’я
пацієнтів. Крім того, збереження даних і створення сповіщень допомагають
забезпечити прозорий облік і покращують моніторинг стану здоров'я літніх людей.
Усі ці функції сприяють підвищенню надійності, ефективності та зручності
використання системи, дозволяючи забезпечити безпечний моніторинг стану
здоров’я користувачів і надавати адміністраторам необхідні інструменти для
управління системою.

Посилання на файл з кодом в GitHub репозиторії: https://github.com/NureSerhieienkovaMariia/arkpz-pzpi-22-7-serhieienkova-mariia/tree/main/Task3/arkpz-pzpi-22-7-serhieienkova-mariia-task3
Посилання на YouTube відео з презентацією: https://youtu.be/UsEw0T1upHY?feature=shared
